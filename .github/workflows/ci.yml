name: FEMlium CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  test:
    if: >-
      (
        (
          github.event_name == 'schedule'
          && github.repository == 'FEMlium/FEMlium'
        ) || (
            github.event_name != 'schedule'
            && !(
              contains(github.event.head_commit.message, '[ci skip]')
              || contains(github.event.head_commit.message, '[skip ci]')
            )
        )
      )
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - backend: none
            container: ubuntu:rolling
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt update -y -q
              apt install -y -qq git python3-mpi4py python3-numpy python3-pip xorg
              rm /usr/lib/python3.*/EXTERNALLY-MANAGED
          - backend: dolfin
            container: numericalpdes/base_images:fenics
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt update -y -q
              apt install -y -qq xorg
          - backend: dolfinx
            container: ghcr.io/fenics/dolfinx/dolfinx:nightly
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt update -y -q
              apt install -y -qq libgl1-mesa-glx xvfb
          - backend: firedrake
            container: firedrakeproject/firedrake
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt update -y -q
              apt install -y -qq libgl1-mesa-glx xorg xvfb
              echo "/home/firedrake/firedrake/bin" >> $GITHUB_PATH
      fail-fast: false
    container:
      image: ${{ matrix.container }}
      options: --user root
    steps:
      - uses: actions/checkout@v4
      - name: Setup container
        run: ${{ matrix.setup_container }}
      - name: Install FEMlium
        run: python3 -m pip install .[docs,lint,tests,tutorials]
      - name: Run flake8 checks on python files
        run: |
          python3 -m flake8 .
      - name: Run documentation generation
        run: |
          cd docs && make html
      - name: Run unit tests
        run: |
          COVERAGE_FILE=.coverage_unit_${{ matrix.backend }} python3 -m pytest --cov=femlium --cov-report= tests/unit
      - name: Run flake8 checks on tutorial files
        run: |
          NO_TESTS_COLLECTED=5
          python3 -m pytest --ipynb-action=create-notebooks tutorials || (($?==$NO_TESTS_COLLECTED))
          python3 -m nbqa flake8 .
        shell: bash
      - name: Check for stray outputs, counts and metadata in ipynb files
        uses: RBniCS/check-jupyter-metadata-action@main
        with:
          pattern: "tutorials/**/*.ipynb"
      - name: Run tutorials
        run: |
          COVERAGE_FILE=.coverage_tutorials_${{ matrix.backend }} python3 -m pytest --cov=femlium --cov-report= tutorials
      - name: Store coverage reports as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.backend }}
          path: |
            .coverage_unit_${{ matrix.backend }}
            .coverage_tutorials_${{ matrix.backend }}
          retention-days: 1
      - name: Upload tutorials logs as an artifact in case of failure
        if: failure() || cancelled()
        uses: actions/upload-artifact@v3
        with:
          name: "tutorials-logs-${{ matrix.backend }}"
          path: |
            tutorials/**/.ipynb_pytest/**/*.log*

  combine_coverage:
    runs-on: ubuntu-latest
    container: ubuntu
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Setup container
        run: |
          export DEBIAN_FRONTEND="noninteractive"
          apt update -y -q
          apt install -y -qq python3-pip rsync
          python3 -m pip -q install coverage[toml]
      - name: Download coverage reports from artifacts
        uses: actions/download-artifact@v3
      - name: Combine coverage reports
        run: |
          python3 -m coverage combine coverage-*/.coverage*
          python3 -m coverage report --fail-under=100 --show-missing --skip-covered

  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'FEMlium/FEMlium' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci.yml
          days-elapsed: 55
