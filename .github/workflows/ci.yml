name: FEMlium CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 21 * * SUN"
  workflow_dispatch:

jobs:
  test:
    if: >-
      (
        (
          github.event_name == 'schedule'
          && github.repository == 'FEMlium/FEMlium'
        ) || (
            github.event_name != 'schedule'
            && !(
              contains(github.event.head_commit.message, '[ci skip]')
              || contains(github.event.head_commit.message, '[skip ci]')
            )
        )
      )
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - backend: none
            container: ubuntu
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt -y -qq update
              apt install -y -qq git python3-mpi4py python3-numpy python3-pip
              echo "OMPI_ALLOW_RUN_AS_ROOT=1" >> $GITHUB_ENV
              echo "OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1" >> $GITHUB_ENV
              apt install -y -qq xorg
            list_notebooks: |
              readarray -d '' GENERATE_MESH < <(find . -type f -name "generate_mesh*.ipynb" -print0)
              readarray -d '' MESHIO < <(find . -type f -name "tutorial_*_meshio.ipynb" -print0)
              list_notebooks=()
              list_notebooks+=("${GENERATE_MESH[@]}")
              list_notebooks+=("${MESHIO[@]}")
              echo "::set-output name=list_notebooks::${list_notebooks[@]}"
          - backend: dolfin
            container: numericalpdes/base_images:fenics
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt -y -qq update
              apt install -y -qq xorg
              python3 -m pip -q install --upgrade nbclient
            list_notebooks: |
              readarray -d '' DOLFIN < <(find . -type f -name "tutorial_*_dolfin.ipynb" -print0)
              list_notebooks=()
              list_notebooks+=("${DOLFIN[@]}")
              echo "::set-output name=list_notebooks::${list_notebooks[@]}"
          - backend: dolfinx
            container: dolfinx/dolfinx:nightly
            setup_container: |
              python3 -m pip -q install --upgrade https://dmf.unicatt.it/ballarin/public/zstandard-0.19.0.dev0-cp310-cp310-linux_x86_64.whl
              python3 -m pip -q install --upgrade https://dmf.unicatt.it/ballarin/public/itkwidgets-0.33.0.dev0-py2.py3-none-any.whl
              python3 -m pip -q install --upgrade itkwidgets pyvista
            list_notebooks: |
              readarray -d '' DOLFINX < <(find . -type f -name "tutorial_*_dolfinx.ipynb" -print0)
              list_notebooks=()
              list_notebooks+=("${DOLFINX[@]}")
              echo "::set-output name=list_notebooks::${list_notebooks[@]}"
          - backend: firedrake
            container: firedrakeproject/firedrake
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt -y -qq update
              apt install -y -qq xorg
              python3 -m pip -q install --upgrade pip
              echo "/home/firedrake/firedrake/bin" >> $GITHUB_PATH
            list_notebooks: |
              readarray -d '' FIREDRAKE < <(find . -type f -name "tutorial_*_firedrake.ipynb" -print0)
              list_notebooks=()
              list_notebooks+=("${FIREDRAKE[@]}")
              echo "::set-output name=list_notebooks::${list_notebooks[@]}"
      fail-fast: false
    container:
      image: ${{ matrix.container }}
      options: --user root
    steps:
      - uses: actions/checkout@v2
      - name: Setup container
        run: ${{ matrix.setup_container }}
      - name: Install dependencies
        run: |
          ${{ matrix.setup_dependencies }}
          echo "Test dependencies"
          python3 -m pip -q install --upgrade "flake8<5" pytest pytest-flake8 pytest-xdist
          echo "Tutorial dependencies"
          python3 -m pip -q install --upgrade jupyter nbconvert
      - name: Install FEMlium
        run: python3 -m pip install .[docs,lint,tests,tutorials]
      - name: Run flake8 checks
        run: |
          echo pytest --flake8 -m flake8 .
      - name: Check for stray outputs, counts and metadata in ipynb files
        uses: RBniCS/check-jupyter-metadata-action@main
        with:
          pattern: "tutorials/**/*.ipynb"
      - name: Run unit tests
        run: pytest -n auto tests/unit
      - name: Run tutorials
        run: pytest -n auto tutorials
      - name: Get notebooks to be converted
        id: list_notebooks
        if: always()
        run: ${{ matrix.list_notebooks }}
        shell: bash
      - name: Convert notebooks
        if: always()
        uses: ./.github/actions/jupyter/convert
        with:
          list_notebooks: ${{ steps.list_notebooks.outputs.list_notebooks }}
      - name: Store converted notebooks as artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: converted-notebooks-${{ matrix.backend }}
          path: _build/html
          retention-days: 1
      - name: Warn if scheduled workflow is about to be disabled
        if: github.repository == 'FEMlium/FEMlium' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci.yml
          days-elapsed: 50

  publish_notebooks:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.repository == 'FEMlium/FEMlium' && github.ref == 'refs/heads/main'
    steps:
      - name: Download converted notebooks from artifacts
        uses: actions/download-artifact@v2
        with:
          path: _build/html
      - name: Flatten the artifacts hierarchy
        run: |
          rsync -avh --remove-source-files _build/html/converted-notebooks-*/ _build/html/
          find _build/html/ -type d -empty -delete
      - name: Upload notebooks to website
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          external_repository: FEMlium/femlium.github.io
          publish_dir: _build/html
          keep_files: true
          user_name: 'GitHub Actions'
          user_email: '41898282+github-actions[bot]@users.noreply.github.com'
