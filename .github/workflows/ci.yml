name: FEMlium CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - backend: none
            container: debian:testing
            setup_git: |
              export DEBIAN_FRONTEND="noninteractive"
              apt update -y -q
              apt install -y -qq git
            setup_container: |
              export DEBIAN_FRONTEND="noninteractive"
              apt update -y -q
              apt install -y -qq python3-mpi4py python3-numpy python3-pip xorg
              rm /usr/lib/python3.*/EXTERNALLY-MANAGED
          - backend: dolfin
            container: numericalpdes/base_images:fenics-real
            setup_git: ""
            setup_container: ""
          - backend: dolfinx
            container: ghcr.io/fenics/dolfinx/dolfinx:nightly
            setup_git: ""
            setup_container: |
              rm /usr/lib/python3.*/EXTERNALLY-MANAGED
          - backend: firedrake
            container: firedrakeproject/firedrake
            setup_git: ""
            setup_container: |
              echo "/home/firedrake/firedrake/bin" >> $GITHUB_PATH
      fail-fast: false
    container:
      image: ${{ matrix.container }}
      options: --user root
    steps:
      - name: Setup git
        run: ${{ matrix.setup_git }}
      - uses: actions/checkout@v4
      - name: Setup container
        run: ${{ matrix.setup_container }}
      - name: Install FEMlium
        run: |
          BACKEND=backend_${{ matrix.backend }}
          python3 -m pip install .[${BACKEND},docs,lint,tests,tutorials]
      - name: Run ruff on python files
        run: |
          python3 -m ruff .
      - name: Run isort on python files
        run: |
          python3 -m isort --check --diff .
      - name: Run yamllint on workflows
        run: |
          python3 -m yamllint -d "{extends: default, rules: {document-start: {present: false}, line-length: disable, truthy: {check-keys: false}}}" .
      - name: Run documentation generation
        run: |
          cd docs && python3 -m sphinx -W -b html . build/html
      - name: Run unit tests
        run: |
          COVERAGE_FILE=.coverage_unit_${{ matrix.backend }} python3 -m coverage run --source=femlium -m pytest tests/unit
      - name: Generate tutorial files
        run: |
          NO_TESTS_COLLECTED=5
          python3 -m pytest --ipynb-action=create-notebooks tutorials || (($?==$NO_TESTS_COLLECTED))
        shell: bash
      - name: Run ruff on tutorial files
        run: |
          python3 -m nbqa ruff .
      - name: Run isort on tutorial files
        run: |
          python3 -m nbqa isort --check --diff .
      - name: Check for stray outputs, counts and metadata in ipynb files
        uses: RBniCS/check-jupyter-metadata-action@main
        with:
          pattern: "tutorials/**/*.ipynb"
      - name: Run tutorials
        run: |
          COVERAGE_FILE=.coverage_tutorials_${{ matrix.backend }} python3 -m pytest --coverage-source=femlium tutorials
      - name: Store coverage reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.backend }}
          path: |
            .coverage*
          retention-days: 1
      - name: Upload tutorials logs as an artifact in case of failure
        if: failure() || cancelled()
        uses: actions/upload-artifact@v4
        with:
          name: "tutorials-logs-${{ matrix.backend }}"
          path: |
            tutorials/**/.ipynb_pytest/**/*.log*

  combine_coverage:
    runs-on: ubuntu-latest
    container: debian:testing
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Setup container
        run: |
          export DEBIAN_FRONTEND="noninteractive"
          apt update -y -q
          apt install -y -qq python3-pip
          rm /usr/lib/python3.*/EXTERNALLY-MANAGED
          python3 -m pip -q install coverage[toml]
      - name: Download coverage reports from artifacts
        uses: actions/download-artifact@v4
      - name: Combine coverage reports
        run: |
          python3 -m coverage combine coverage-*/.coverage*
          python3 -m coverage report --fail-under=100 --show-missing --skip-covered

  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'FEMlium/FEMlium' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci.yml
          days-elapsed: 55
